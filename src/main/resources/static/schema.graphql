scalar DateTime

type Query {
    # category
    getCategoryById(categoryId: ID): Category
    getCategories(searchString: String, page: Int, size: Int, sort: [String]): CategoryPageInfo
    # location
    getLocation(region: RegionType): Location
    # order
    getOrderByOrderNumber(orderNumber: String): Order
}

type Mutation {
    createOrder(orderDTO: OrderDTO): Order
}

# category
type Category {
    id: ID
    name: String
    description: String
    image: String
}
type CategoryPageInfo {
    totalElements: ID
    totalPages: Int
    size: Int
    number: Int
    numberOfElements: Int
    sort: String
    content: [Category]
}
# location
type Location {
    id: ID!
    locationInfo: String
    locationImage: String
}
enum RegionType {
    UNITED_STATES
    UNITED_KINGDOM
    GERMANY
    FRANCE
    JAPAN
    SOUTH_KOREA
    SPAIN
    AUSTRALIA
    MERCURY
    VENUS
    EARTH
    MARS
    JUPITER
    SATURN
    URANUS
    NEPTUNE
    LOCATION_1
    LOCATION_2
    LOCATION_3
    LOCATION_4
    LOCATION_5
    LOCATION_6
    LOCATION_7
    LOCATION_8
}
# order
type Order {
    id: ID
    orderNumber: String
    requestedBy: String
    status: String
    reviewedByAPV: Boolean
    reviewedByPRCH: Boolean
    respondedBy: String
    orderItems: [OrderItem]
    region: String
    location: String
    orderImage: String
    receiverId: String
    eventId: String
    eventNumber: String
    submissionDate: DateTime
    approverReplyDate: DateTime
    comments: String
}
type OrderItem {
    id: ID
    name: String
    description: String
    image: String
    itemId: ID
    quantity: Int
}
input OrderDTO {
    region: RegionType
    location: String
    receiverId: String
    eventId: String
    eventNumber: String
}